% Generated by roxygen2 (4.0.2): do not edit by hand
\name{prints_text}
\alias{expect_output}
\alias{prints_text}
\title{Expectation: does printed output match a regular expression?}
\usage{
prints_text(regexp, ...)

expect_output(object, regexp, ..., info = NULL, label = NULL)
}
\arguments{
\item{regexp}{regular expression to test against}

\item{...}{other arguments passed to \code{\link{matches}}}

\item{object}{object to test}

\item{info}{extra information to be included in the message (useful when
writing tests in loops).}

\item{label}{object label. When \code{NULL}, computed from deparsed object.}
}
\description{
Expectation: does printed output match a regular expression?
}
\examples{
str(mtcars)
expect_output(str(mtcars), "32 obs")
expect_output(str(mtcars), "11 variables")

# You can use the arguments of grepl to control the matching
expect_output(str(mtcars), "11 VARIABLES", ignore.case = TRUE)
expect_output(str(mtcars), "$ mpg", fixed = TRUE)
}
\seealso{
Other expectations: \code{\link{equals_reference}},
  \code{\link{expect_equal_to_reference}};
  \code{\link{equals}}, \code{\link{expect_equal}};
  \code{\link{expect-compare}},
  \code{\link{expect_less_than}},
  \code{\link{expect_more_than}},
  \code{\link{is_less_than}}, \code{\link{is_more_than}};
  \code{\link{expect_equivalent}},
  \code{\link{is_equivalent_to}};
  \code{\link{expect_error}}, \code{\link{throws_error}};
  \code{\link{expect_false}}, \code{\link{expect_true}},
  \code{\link{is_false}}, \code{\link{is_true}};
  \code{\link{expect_identical}},
  \code{\link{is_identical_to}}; \code{\link{expect_is}},
  \code{\link{is_a}}; \code{\link{expect_match}},
  \code{\link{matches}}; \code{\link{expect_message}},
  \code{\link{shows_message}}; \code{\link{expect_named}},
  \code{\link{has_names}}; \code{\link{expect_null}},
  \code{\link{is_null}}; \code{\link{expect_warning}},
  \code{\link{gives_warning}};
  \code{\link{takes_less_than}}
}

